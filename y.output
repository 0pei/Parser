Terminals unused in grammar

    RETURN
    CONTINUE
    BREAK
    VOID


State 0 conflicts: 19 shift/reduce
State 23 conflicts: 1 shift/reduce
State 24 conflicts: 6 shift/reduce
State 25 conflicts: 2 shift/reduce
State 26 conflicts: 3 shift/reduce
State 29 conflicts: 1 shift/reduce
State 42 conflicts: 19 shift/reduce, 1 reduce/reduce
State 54 conflicts: 19 shift/reduce
State 100 conflicts: 20 shift/reduce
State 105 conflicts: 1 shift/reduce
State 107 conflicts: 6 shift/reduce
State 108 conflicts: 2 shift/reduce
State 109 conflicts: 3 shift/reduce
State 117 conflicts: 1 shift/reduce


Grammar

    0 $accept: Program $end

    1 Program: StatementList

    2 TypeName: INT
    3         | FLOAT
    4         | STRING
    5         | BOOL

    6 Expression: Expression OR Expression1
    7           | Expression1

    8 Expression1: Expression1 AND Expression2
    9            | Expression2

   10 Expression2: Expression2 cmp_op Expression3
   11            | Expression3

   12 Expression3: Expression3 add_op Expression4
   13            | Expression4

   14 Expression4: Expression4 mul_op UnaryExpr
   15            | UnaryExpr

   16 UnaryExpr: PrimaryExpr
   17          | unary_op UnaryExpr

   18 cmp_op: EQL
   19       | NEQ
   20       | '<'
   21       | LEQ
   22       | '>'
   23       | GEQ

   24 add_op: '+'
   25       | '-'

   26 mul_op: '*'
   27       | '/'
   28       | '%'

   29 unary_op: '+'
   30         | '-'
   31         | '!'

   32 PrimaryExpr: Operand
   33            | IndexExpr
   34            | ConversionExpr

   35 Operand: Literal
   36        | IDENT
   37        | '(' Expression ')'

   38 Literal: INT_LIT
   39        | FLOAT_LIT
   40        | '"' STRING_LIT '"'
   41        | BOOL_LIT

   42 BOOL_LIT: TRUE
   43         | FALSE

   44 IndexExpr: PrimaryExpr '[' Expression ']'

   45 ConversionExpr: '(' TypeName ')' Expression

   46 Statement: %empty
   47          | DeclarationStmt
   48          | AssignmentStmt
   49          | IncDecStmt
   50          | Block
   51          | IfStmt
   52          | WhileStmt
   53          | ForStmt
   54          | PrintStmt
   55          | Expression SEMICOLON

   56 DeclarationStmt: TypeName IDENT SEMICOLON
   57                | TypeName IDENT '=' Expression SEMICOLON
   58                | TypeName IDENT '[' Expression ']' SEMICOLON

   59 AssignmentExpr: Expression assign_op Expression

   60 AssignmentStmt: AssignmentExpr SEMICOLON

   61 assign_op: '='
   62          | ADD_ASSIGN
   63          | SUB_ASSIGN
   64          | MUL_ASSIGN
   65          | QUO_ASSIGN
   66          | REM_ASSIGN

   67 IncDecExpr: Expression INC
   68           | Expression DEC

   69 IncDecStmt: IncDecExpr SEMICOLON

   70 $@1: %empty

   71 Block: '{' $@1 StatementList '}'

   72 StatementList: Statement
   73              | StatementList Statement

   74 IfStmt: IF Condition Block
   75       | IF Condition Block ELSE IfStmt
   76       | IF Condition Block ELSE Block

   77 Condition: Expression

   78 WhileStmt: WHILE '(' Condition ')' Block

   79 ForStmt: FOR '(' ForClause ')' Block

   80 ForClause: InitStmt SEMICOLON Condition SEMICOLON PostStmt

   81 InitStmt: SimpleExpr

   82 PostStmt: SimpleExpr

   83 SimpleExpr: AssignmentExpr
   84           | Expression
   85           | IncDecExpr

   86 PrintStmt: PRINT '(' Expression ')' SEMICOLON


Terminals, with rules where they appear

    $end (0) 0
    '!' (33) 31
    '"' (34) 40
    '%' (37) 28
    '(' (40) 37 45 78 79 86
    ')' (41) 37 45 78 79 86
    '*' (42) 26
    '+' (43) 24 29
    '-' (45) 25 30
    '/' (47) 27
    '<' (60) 20
    '=' (61) 57 61
    '>' (62) 22
    '[' (91) 44 58
    ']' (93) 44 58
    '{' (123) 71
    '}' (125) 71
    error (256)
    INT (258) 2
    FLOAT (259) 3
    BOOL (260) 5
    STRING (261) 4
    SEMICOLON (262) 55 56 57 58 60 69 80 86
    TRUE (263) 42
    FALSE (264) 43
    OR (265) 6
    AND (266) 8
    EQL (267) 18
    NEQ (268) 19
    LEQ (269) 21
    GEQ (270) 23
    INC (271) 67
    DEC (272) 68
    ADD_ASSIGN (273) 62
    SUB_ASSIGN (274) 63
    MUL_ASSIGN (275) 64
    QUO_ASSIGN (276) 65
    REM_ASSIGN (277) 66
    PRINT (278) 86
    RETURN (279)
    IF (280) 74 75 76
    ELSE (281) 75 76
    FOR (282) 79
    WHILE (283) 78
    CONTINUE (284)
    BREAK (285)
    VOID (286)
    INT_LIT <i_val> (287) 38
    FLOAT_LIT <f_val> (288) 39
    STRING_LIT <s_val> (289) 40
    IDENT <s_val> (290) 36 56 57 58


Nonterminals, with rules where they appear

    $accept (52)
        on left: 0
    Program (53)
        on left: 1
        on right: 0
    TypeName <s_val> (54)
        on left: 2 3 4 5
        on right: 45 56 57 58
    Expression <s_val> (55)
        on left: 6 7
        on right: 6 37 44 45 55 57 58 59 67 68 77 84 86
    Expression1 <s_val> (56)
        on left: 8 9
        on right: 6 7 8
    Expression2 <s_val> (57)
        on left: 10 11
        on right: 8 9 10
    Expression3 <s_val> (58)
        on left: 12 13
        on right: 10 11 12
    Expression4 <s_val> (59)
        on left: 14 15
        on right: 12 13 14
    UnaryExpr <s_val> (60)
        on left: 16 17
        on right: 14 15 17
    cmp_op <s_val> (61)
        on left: 18 19 20 21 22 23
        on right: 10
    add_op <s_val> (62)
        on left: 24 25
        on right: 12
    mul_op <s_val> (63)
        on left: 26 27 28
        on right: 14
    unary_op <s_val> (64)
        on left: 29 30 31
        on right: 17
    PrimaryExpr <s_val> (65)
        on left: 32 33 34
        on right: 16 44
    Operand <s_val> (66)
        on left: 35 36 37
        on right: 32
    Literal <s_val> (67)
        on left: 38 39 40 41
        on right: 35
    BOOL_LIT <s_val> (68)
        on left: 42 43
        on right: 41
    IndexExpr <s_val> (69)
        on left: 44
        on right: 33
    ConversionExpr (70)
        on left: 45
        on right: 34
    Statement (71)
        on left: 46 47 48 49 50 51 52 53 54 55
        on right: 72 73
    DeclarationStmt (72)
        on left: 56 57 58
        on right: 47
    AssignmentExpr (73)
        on left: 59
        on right: 60 83
    AssignmentStmt (74)
        on left: 60
        on right: 48
    assign_op <s_val> (75)
        on left: 61 62 63 64 65 66
        on right: 59
    IncDecExpr (76)
        on left: 67 68
        on right: 69 85
    IncDecStmt (77)
        on left: 69
        on right: 49
    Block (78)
        on left: 71
        on right: 50 74 75 76 78 79
    $@1 (79)
        on left: 70
        on right: 71
    StatementList (80)
        on left: 72 73
        on right: 1 71 73
    IfStmt (81)
        on left: 74 75 76
        on right: 51 75
    Condition (82)
        on left: 77
        on right: 74 75 76 78 80
    WhileStmt (83)
        on left: 78
        on right: 52
    ForStmt (84)
        on left: 79
        on right: 53
    ForClause (85)
        on left: 80
        on right: 79
    InitStmt (86)
        on left: 81
        on right: 80
    PostStmt (87)
        on left: 82
        on right: 80
    SimpleExpr (88)
        on left: 83 84 85
        on right: 81 82
    PrintStmt (89)
        on left: 86
        on right: 54


State 0

    0 $accept: . Program $end

    INT        shift, and go to state 1
    FLOAT      shift, and go to state 2
    BOOL       shift, and go to state 3
    STRING     shift, and go to state 4
    TRUE       shift, and go to state 5
    FALSE      shift, and go to state 6
    PRINT      shift, and go to state 7
    IF         shift, and go to state 8
    FOR        shift, and go to state 9
    WHILE      shift, and go to state 10
    '+'        shift, and go to state 11
    '-'        shift, and go to state 12
    '('        shift, and go to state 13
    '{'        shift, and go to state 14
    '!'        shift, and go to state 15
    INT_LIT    shift, and go to state 16
    FLOAT_LIT  shift, and go to state 17
    IDENT      shift, and go to state 18
    '"'        shift, and go to state 19

    INT        [reduce using rule 46 (Statement)]
    FLOAT      [reduce using rule 46 (Statement)]
    BOOL       [reduce using rule 46 (Statement)]
    STRING     [reduce using rule 46 (Statement)]
    TRUE       [reduce using rule 46 (Statement)]
    FALSE      [reduce using rule 46 (Statement)]
    PRINT      [reduce using rule 46 (Statement)]
    IF         [reduce using rule 46 (Statement)]
    FOR        [reduce using rule 46 (Statement)]
    WHILE      [reduce using rule 46 (Statement)]
    '+'        [reduce using rule 46 (Statement)]
    '-'        [reduce using rule 46 (Statement)]
    '('        [reduce using rule 46 (Statement)]
    '{'        [reduce using rule 46 (Statement)]
    '!'        [reduce using rule 46 (Statement)]
    INT_LIT    [reduce using rule 46 (Statement)]
    FLOAT_LIT  [reduce using rule 46 (Statement)]
    IDENT      [reduce using rule 46 (Statement)]
    '"'        [reduce using rule 46 (Statement)]
    $default   reduce using rule 46 (Statement)

    Program          go to state 20
    TypeName         go to state 21
    Expression       go to state 22
    Expression1      go to state 23
    Expression2      go to state 24
    Expression3      go to state 25
    Expression4      go to state 26
    UnaryExpr        go to state 27
    unary_op         go to state 28
    PrimaryExpr      go to state 29
    Operand          go to state 30
    Literal          go to state 31
    BOOL_LIT         go to state 32
    IndexExpr        go to state 33
    ConversionExpr   go to state 34
    Statement        go to state 35
    DeclarationStmt  go to state 36
    AssignmentExpr   go to state 37
    AssignmentStmt   go to state 38
    IncDecExpr       go to state 39
    IncDecStmt       go to state 40
    Block            go to state 41
    StatementList    go to state 42
    IfStmt           go to state 43
    WhileStmt        go to state 44
    ForStmt          go to state 45
    PrintStmt        go to state 46


State 1

    2 TypeName: INT .

    $default  reduce using rule 2 (TypeName)


State 2

    3 TypeName: FLOAT .

    $default  reduce using rule 3 (TypeName)


State 3

    5 TypeName: BOOL .

    $default  reduce using rule 5 (TypeName)


State 4

    4 TypeName: STRING .

    $default  reduce using rule 4 (TypeName)


State 5

   42 BOOL_LIT: TRUE .

    $default  reduce using rule 42 (BOOL_LIT)


State 6

   43 BOOL_LIT: FALSE .

    $default  reduce using rule 43 (BOOL_LIT)


State 7

   86 PrintStmt: PRINT . '(' Expression ')' SEMICOLON

    '('  shift, and go to state 47


State 8

   74 IfStmt: IF . Condition Block
   75       | IF . Condition Block ELSE IfStmt
   76       | IF . Condition Block ELSE Block

    TRUE       shift, and go to state 5
    FALSE      shift, and go to state 6
    '+'        shift, and go to state 11
    '-'        shift, and go to state 12
    '('        shift, and go to state 13
    '!'        shift, and go to state 15
    INT_LIT    shift, and go to state 16
    FLOAT_LIT  shift, and go to state 17
    IDENT      shift, and go to state 18
    '"'        shift, and go to state 19

    Expression      go to state 48
    Expression1     go to state 23
    Expression2     go to state 24
    Expression3     go to state 25
    Expression4     go to state 26
    UnaryExpr       go to state 27
    unary_op        go to state 28
    PrimaryExpr     go to state 29
    Operand         go to state 30
    Literal         go to state 31
    BOOL_LIT        go to state 32
    IndexExpr       go to state 33
    ConversionExpr  go to state 34
    Condition       go to state 49


State 9

   79 ForStmt: FOR . '(' ForClause ')' Block

    '('  shift, and go to state 50


State 10

   78 WhileStmt: WHILE . '(' Condition ')' Block

    '('  shift, and go to state 51


State 11

   29 unary_op: '+' .

    $default  reduce using rule 29 (unary_op)


State 12

   30 unary_op: '-' .

    $default  reduce using rule 30 (unary_op)


State 13

   37 Operand: '(' . Expression ')'
   45 ConversionExpr: '(' . TypeName ')' Expression

    INT        shift, and go to state 1
    FLOAT      shift, and go to state 2
    BOOL       shift, and go to state 3
    STRING     shift, and go to state 4
    TRUE       shift, and go to state 5
    FALSE      shift, and go to state 6
    '+'        shift, and go to state 11
    '-'        shift, and go to state 12
    '('        shift, and go to state 13
    '!'        shift, and go to state 15
    INT_LIT    shift, and go to state 16
    FLOAT_LIT  shift, and go to state 17
    IDENT      shift, and go to state 18
    '"'        shift, and go to state 19

    TypeName        go to state 52
    Expression      go to state 53
    Expression1     go to state 23
    Expression2     go to state 24
    Expression3     go to state 25
    Expression4     go to state 26
    UnaryExpr       go to state 27
    unary_op        go to state 28
    PrimaryExpr     go to state 29
    Operand         go to state 30
    Literal         go to state 31
    BOOL_LIT        go to state 32
    IndexExpr       go to state 33
    ConversionExpr  go to state 34


State 14

   71 Block: '{' . $@1 StatementList '}'

    $default  reduce using rule 70 ($@1)

    $@1  go to state 54


State 15

   31 unary_op: '!' .

    $default  reduce using rule 31 (unary_op)


State 16

   38 Literal: INT_LIT .

    $default  reduce using rule 38 (Literal)


State 17

   39 Literal: FLOAT_LIT .

    $default  reduce using rule 39 (Literal)


State 18

   36 Operand: IDENT .

    $default  reduce using rule 36 (Operand)


State 19

   40 Literal: '"' . STRING_LIT '"'

    STRING_LIT  shift, and go to state 55


State 20

    0 $accept: Program . $end

    $end  shift, and go to state 56


State 21

   56 DeclarationStmt: TypeName . IDENT SEMICOLON
   57                | TypeName . IDENT '=' Expression SEMICOLON
   58                | TypeName . IDENT '[' Expression ']' SEMICOLON

    IDENT  shift, and go to state 57


State 22

    6 Expression: Expression . OR Expression1
   55 Statement: Expression . SEMICOLON
   59 AssignmentExpr: Expression . assign_op Expression
   67 IncDecExpr: Expression . INC
   68           | Expression . DEC

    SEMICOLON   shift, and go to state 58
    OR          shift, and go to state 59
    INC         shift, and go to state 60
    DEC         shift, and go to state 61
    ADD_ASSIGN  shift, and go to state 62
    SUB_ASSIGN  shift, and go to state 63
    MUL_ASSIGN  shift, and go to state 64
    QUO_ASSIGN  shift, and go to state 65
    REM_ASSIGN  shift, and go to state 66
    '='         shift, and go to state 67

    assign_op  go to state 68


State 23

    7 Expression: Expression1 .
    8 Expression1: Expression1 . AND Expression2

    AND  shift, and go to state 69

    AND       [reduce using rule 7 (Expression)]
    $default  reduce using rule 7 (Expression)


State 24

    9 Expression1: Expression2 .
   10 Expression2: Expression2 . cmp_op Expression3

    EQL  shift, and go to state 70
    NEQ  shift, and go to state 71
    LEQ  shift, and go to state 72
    GEQ  shift, and go to state 73
    '>'  shift, and go to state 74
    '<'  shift, and go to state 75

    EQL       [reduce using rule 9 (Expression1)]
    NEQ       [reduce using rule 9 (Expression1)]
    LEQ       [reduce using rule 9 (Expression1)]
    GEQ       [reduce using rule 9 (Expression1)]
    '>'       [reduce using rule 9 (Expression1)]
    '<'       [reduce using rule 9 (Expression1)]
    $default  reduce using rule 9 (Expression1)

    cmp_op  go to state 76


State 25

   11 Expression2: Expression3 .
   12 Expression3: Expression3 . add_op Expression4

    '+'  shift, and go to state 77
    '-'  shift, and go to state 78

    '+'       [reduce using rule 11 (Expression2)]
    '-'       [reduce using rule 11 (Expression2)]
    $default  reduce using rule 11 (Expression2)

    add_op  go to state 79


State 26

   13 Expression3: Expression4 .
   14 Expression4: Expression4 . mul_op UnaryExpr

    '*'  shift, and go to state 80
    '/'  shift, and go to state 81
    '%'  shift, and go to state 82

    '*'       [reduce using rule 13 (Expression3)]
    '/'       [reduce using rule 13 (Expression3)]
    '%'       [reduce using rule 13 (Expression3)]
    $default  reduce using rule 13 (Expression3)

    mul_op  go to state 83


State 27

   15 Expression4: UnaryExpr .

    $default  reduce using rule 15 (Expression4)


State 28

   17 UnaryExpr: unary_op . UnaryExpr

    TRUE       shift, and go to state 5
    FALSE      shift, and go to state 6
    '+'        shift, and go to state 11
    '-'        shift, and go to state 12
    '('        shift, and go to state 13
    '!'        shift, and go to state 15
    INT_LIT    shift, and go to state 16
    FLOAT_LIT  shift, and go to state 17
    IDENT      shift, and go to state 18
    '"'        shift, and go to state 19

    UnaryExpr       go to state 84
    unary_op        go to state 28
    PrimaryExpr     go to state 29
    Operand         go to state 30
    Literal         go to state 31
    BOOL_LIT        go to state 32
    IndexExpr       go to state 33
    ConversionExpr  go to state 34


State 29

   16 UnaryExpr: PrimaryExpr .
   44 IndexExpr: PrimaryExpr . '[' Expression ']'

    '['  shift, and go to state 85

    '['       [reduce using rule 16 (UnaryExpr)]
    $default  reduce using rule 16 (UnaryExpr)


State 30

   32 PrimaryExpr: Operand .

    $default  reduce using rule 32 (PrimaryExpr)


State 31

   35 Operand: Literal .

    $default  reduce using rule 35 (Operand)


State 32

   41 Literal: BOOL_LIT .

    $default  reduce using rule 41 (Literal)


State 33

   33 PrimaryExpr: IndexExpr .

    $default  reduce using rule 33 (PrimaryExpr)


State 34

   34 PrimaryExpr: ConversionExpr .

    $default  reduce using rule 34 (PrimaryExpr)


State 35

   72 StatementList: Statement .

    $default  reduce using rule 72 (StatementList)


State 36

   47 Statement: DeclarationStmt .

    $default  reduce using rule 47 (Statement)


State 37

   60 AssignmentStmt: AssignmentExpr . SEMICOLON

    SEMICOLON  shift, and go to state 86


State 38

   48 Statement: AssignmentStmt .

    $default  reduce using rule 48 (Statement)


State 39

   69 IncDecStmt: IncDecExpr . SEMICOLON

    SEMICOLON  shift, and go to state 87


State 40

   49 Statement: IncDecStmt .

    $default  reduce using rule 49 (Statement)


State 41

   50 Statement: Block .

    $default  reduce using rule 50 (Statement)


State 42

    1 Program: StatementList .
   73 StatementList: StatementList . Statement

    INT        shift, and go to state 1
    FLOAT      shift, and go to state 2
    BOOL       shift, and go to state 3
    STRING     shift, and go to state 4
    TRUE       shift, and go to state 5
    FALSE      shift, and go to state 6
    PRINT      shift, and go to state 7
    IF         shift, and go to state 8
    FOR        shift, and go to state 9
    WHILE      shift, and go to state 10
    '+'        shift, and go to state 11
    '-'        shift, and go to state 12
    '('        shift, and go to state 13
    '{'        shift, and go to state 14
    '!'        shift, and go to state 15
    INT_LIT    shift, and go to state 16
    FLOAT_LIT  shift, and go to state 17
    IDENT      shift, and go to state 18
    '"'        shift, and go to state 19

    $end       reduce using rule 1 (Program)
    $end       [reduce using rule 46 (Statement)]
    INT        [reduce using rule 46 (Statement)]
    FLOAT      [reduce using rule 46 (Statement)]
    BOOL       [reduce using rule 46 (Statement)]
    STRING     [reduce using rule 46 (Statement)]
    TRUE       [reduce using rule 46 (Statement)]
    FALSE      [reduce using rule 46 (Statement)]
    PRINT      [reduce using rule 46 (Statement)]
    IF         [reduce using rule 46 (Statement)]
    FOR        [reduce using rule 46 (Statement)]
    WHILE      [reduce using rule 46 (Statement)]
    '+'        [reduce using rule 46 (Statement)]
    '-'        [reduce using rule 46 (Statement)]
    '('        [reduce using rule 46 (Statement)]
    '{'        [reduce using rule 46 (Statement)]
    '!'        [reduce using rule 46 (Statement)]
    INT_LIT    [reduce using rule 46 (Statement)]
    FLOAT_LIT  [reduce using rule 46 (Statement)]
    IDENT      [reduce using rule 46 (Statement)]
    '"'        [reduce using rule 46 (Statement)]
    $default   reduce using rule 1 (Program)

    TypeName         go to state 21
    Expression       go to state 22
    Expression1      go to state 23
    Expression2      go to state 24
    Expression3      go to state 25
    Expression4      go to state 26
    UnaryExpr        go to state 27
    unary_op         go to state 28
    PrimaryExpr      go to state 29
    Operand          go to state 30
    Literal          go to state 31
    BOOL_LIT         go to state 32
    IndexExpr        go to state 33
    ConversionExpr   go to state 34
    Statement        go to state 88
    DeclarationStmt  go to state 36
    AssignmentExpr   go to state 37
    AssignmentStmt   go to state 38
    IncDecExpr       go to state 39
    IncDecStmt       go to state 40
    Block            go to state 41
    IfStmt           go to state 43
    WhileStmt        go to state 44
    ForStmt          go to state 45
    PrintStmt        go to state 46


State 43

   51 Statement: IfStmt .

    $default  reduce using rule 51 (Statement)


State 44

   52 Statement: WhileStmt .

    $default  reduce using rule 52 (Statement)


State 45

   53 Statement: ForStmt .

    $default  reduce using rule 53 (Statement)


State 46

   54 Statement: PrintStmt .

    $default  reduce using rule 54 (Statement)


State 47

   86 PrintStmt: PRINT '(' . Expression ')' SEMICOLON

    TRUE       shift, and go to state 5
    FALSE      shift, and go to state 6
    '+'        shift, and go to state 11
    '-'        shift, and go to state 12
    '('        shift, and go to state 13
    '!'        shift, and go to state 15
    INT_LIT    shift, and go to state 16
    FLOAT_LIT  shift, and go to state 17
    IDENT      shift, and go to state 18
    '"'        shift, and go to state 19

    Expression      go to state 89
    Expression1     go to state 23
    Expression2     go to state 24
    Expression3     go to state 25
    Expression4     go to state 26
    UnaryExpr       go to state 27
    unary_op        go to state 28
    PrimaryExpr     go to state 29
    Operand         go to state 30
    Literal         go to state 31
    BOOL_LIT        go to state 32
    IndexExpr       go to state 33
    ConversionExpr  go to state 34


State 48

    6 Expression: Expression . OR Expression1
   77 Condition: Expression .

    OR  shift, and go to state 59

    $default  reduce using rule 77 (Condition)


State 49

   74 IfStmt: IF Condition . Block
   75       | IF Condition . Block ELSE IfStmt
   76       | IF Condition . Block ELSE Block

    '{'  shift, and go to state 14

    Block  go to state 90


State 50

   79 ForStmt: FOR '(' . ForClause ')' Block

    TRUE       shift, and go to state 5
    FALSE      shift, and go to state 6
    '+'        shift, and go to state 11
    '-'        shift, and go to state 12
    '('        shift, and go to state 13
    '!'        shift, and go to state 15
    INT_LIT    shift, and go to state 16
    FLOAT_LIT  shift, and go to state 17
    IDENT      shift, and go to state 18
    '"'        shift, and go to state 19

    Expression      go to state 91
    Expression1     go to state 23
    Expression2     go to state 24
    Expression3     go to state 25
    Expression4     go to state 26
    UnaryExpr       go to state 27
    unary_op        go to state 28
    PrimaryExpr     go to state 29
    Operand         go to state 30
    Literal         go to state 31
    BOOL_LIT        go to state 32
    IndexExpr       go to state 33
    ConversionExpr  go to state 34
    AssignmentExpr  go to state 92
    IncDecExpr      go to state 93
    ForClause       go to state 94
    InitStmt        go to state 95
    SimpleExpr      go to state 96


State 51

   78 WhileStmt: WHILE '(' . Condition ')' Block

    TRUE       shift, and go to state 5
    FALSE      shift, and go to state 6
    '+'        shift, and go to state 11
    '-'        shift, and go to state 12
    '('        shift, and go to state 13
    '!'        shift, and go to state 15
    INT_LIT    shift, and go to state 16
    FLOAT_LIT  shift, and go to state 17
    IDENT      shift, and go to state 18
    '"'        shift, and go to state 19

    Expression      go to state 48
    Expression1     go to state 23
    Expression2     go to state 24
    Expression3     go to state 25
    Expression4     go to state 26
    UnaryExpr       go to state 27
    unary_op        go to state 28
    PrimaryExpr     go to state 29
    Operand         go to state 30
    Literal         go to state 31
    BOOL_LIT        go to state 32
    IndexExpr       go to state 33
    ConversionExpr  go to state 34
    Condition       go to state 97


State 52

   45 ConversionExpr: '(' TypeName . ')' Expression

    ')'  shift, and go to state 98


State 53

    6 Expression: Expression . OR Expression1
   37 Operand: '(' Expression . ')'

    OR   shift, and go to state 59
    ')'  shift, and go to state 99


State 54

   71 Block: '{' $@1 . StatementList '}'

    INT        shift, and go to state 1
    FLOAT      shift, and go to state 2
    BOOL       shift, and go to state 3
    STRING     shift, and go to state 4
    TRUE       shift, and go to state 5
    FALSE      shift, and go to state 6
    PRINT      shift, and go to state 7
    IF         shift, and go to state 8
    FOR        shift, and go to state 9
    WHILE      shift, and go to state 10
    '+'        shift, and go to state 11
    '-'        shift, and go to state 12
    '('        shift, and go to state 13
    '{'        shift, and go to state 14
    '!'        shift, and go to state 15
    INT_LIT    shift, and go to state 16
    FLOAT_LIT  shift, and go to state 17
    IDENT      shift, and go to state 18
    '"'        shift, and go to state 19

    INT        [reduce using rule 46 (Statement)]
    FLOAT      [reduce using rule 46 (Statement)]
    BOOL       [reduce using rule 46 (Statement)]
    STRING     [reduce using rule 46 (Statement)]
    TRUE       [reduce using rule 46 (Statement)]
    FALSE      [reduce using rule 46 (Statement)]
    PRINT      [reduce using rule 46 (Statement)]
    IF         [reduce using rule 46 (Statement)]
    FOR        [reduce using rule 46 (Statement)]
    WHILE      [reduce using rule 46 (Statement)]
    '+'        [reduce using rule 46 (Statement)]
    '-'        [reduce using rule 46 (Statement)]
    '('        [reduce using rule 46 (Statement)]
    '{'        [reduce using rule 46 (Statement)]
    '!'        [reduce using rule 46 (Statement)]
    INT_LIT    [reduce using rule 46 (Statement)]
    FLOAT_LIT  [reduce using rule 46 (Statement)]
    IDENT      [reduce using rule 46 (Statement)]
    '"'        [reduce using rule 46 (Statement)]
    $default   reduce using rule 46 (Statement)

    TypeName         go to state 21
    Expression       go to state 22
    Expression1      go to state 23
    Expression2      go to state 24
    Expression3      go to state 25
    Expression4      go to state 26
    UnaryExpr        go to state 27
    unary_op         go to state 28
    PrimaryExpr      go to state 29
    Operand          go to state 30
    Literal          go to state 31
    BOOL_LIT         go to state 32
    IndexExpr        go to state 33
    ConversionExpr   go to state 34
    Statement        go to state 35
    DeclarationStmt  go to state 36
    AssignmentExpr   go to state 37
    AssignmentStmt   go to state 38
    IncDecExpr       go to state 39
    IncDecStmt       go to state 40
    Block            go to state 41
    StatementList    go to state 100
    IfStmt           go to state 43
    WhileStmt        go to state 44
    ForStmt          go to state 45
    PrintStmt        go to state 46


State 55

   40 Literal: '"' STRING_LIT . '"'

    '"'  shift, and go to state 101


State 56

    0 $accept: Program $end .

    $default  accept


State 57

   56 DeclarationStmt: TypeName IDENT . SEMICOLON
   57                | TypeName IDENT . '=' Expression SEMICOLON
   58                | TypeName IDENT . '[' Expression ']' SEMICOLON

    SEMICOLON  shift, and go to state 102
    '='        shift, and go to state 103
    '['        shift, and go to state 104


State 58

   55 Statement: Expression SEMICOLON .

    $default  reduce using rule 55 (Statement)


State 59

    6 Expression: Expression OR . Expression1

    TRUE       shift, and go to state 5
    FALSE      shift, and go to state 6
    '+'        shift, and go to state 11
    '-'        shift, and go to state 12
    '('        shift, and go to state 13
    '!'        shift, and go to state 15
    INT_LIT    shift, and go to state 16
    FLOAT_LIT  shift, and go to state 17
    IDENT      shift, and go to state 18
    '"'        shift, and go to state 19

    Expression1     go to state 105
    Expression2     go to state 24
    Expression3     go to state 25
    Expression4     go to state 26
    UnaryExpr       go to state 27
    unary_op        go to state 28
    PrimaryExpr     go to state 29
    Operand         go to state 30
    Literal         go to state 31
    BOOL_LIT        go to state 32
    IndexExpr       go to state 33
    ConversionExpr  go to state 34


State 60

   67 IncDecExpr: Expression INC .

    $default  reduce using rule 67 (IncDecExpr)


State 61

   68 IncDecExpr: Expression DEC .

    $default  reduce using rule 68 (IncDecExpr)


State 62

   62 assign_op: ADD_ASSIGN .

    $default  reduce using rule 62 (assign_op)


State 63

   63 assign_op: SUB_ASSIGN .

    $default  reduce using rule 63 (assign_op)


State 64

   64 assign_op: MUL_ASSIGN .

    $default  reduce using rule 64 (assign_op)


State 65

   65 assign_op: QUO_ASSIGN .

    $default  reduce using rule 65 (assign_op)


State 66

   66 assign_op: REM_ASSIGN .

    $default  reduce using rule 66 (assign_op)


State 67

   61 assign_op: '=' .

    $default  reduce using rule 61 (assign_op)


State 68

   59 AssignmentExpr: Expression assign_op . Expression

    TRUE       shift, and go to state 5
    FALSE      shift, and go to state 6
    '+'        shift, and go to state 11
    '-'        shift, and go to state 12
    '('        shift, and go to state 13
    '!'        shift, and go to state 15
    INT_LIT    shift, and go to state 16
    FLOAT_LIT  shift, and go to state 17
    IDENT      shift, and go to state 18
    '"'        shift, and go to state 19

    Expression      go to state 106
    Expression1     go to state 23
    Expression2     go to state 24
    Expression3     go to state 25
    Expression4     go to state 26
    UnaryExpr       go to state 27
    unary_op        go to state 28
    PrimaryExpr     go to state 29
    Operand         go to state 30
    Literal         go to state 31
    BOOL_LIT        go to state 32
    IndexExpr       go to state 33
    ConversionExpr  go to state 34


State 69

    8 Expression1: Expression1 AND . Expression2

    TRUE       shift, and go to state 5
    FALSE      shift, and go to state 6
    '+'        shift, and go to state 11
    '-'        shift, and go to state 12
    '('        shift, and go to state 13
    '!'        shift, and go to state 15
    INT_LIT    shift, and go to state 16
    FLOAT_LIT  shift, and go to state 17
    IDENT      shift, and go to state 18
    '"'        shift, and go to state 19

    Expression2     go to state 107
    Expression3     go to state 25
    Expression4     go to state 26
    UnaryExpr       go to state 27
    unary_op        go to state 28
    PrimaryExpr     go to state 29
    Operand         go to state 30
    Literal         go to state 31
    BOOL_LIT        go to state 32
    IndexExpr       go to state 33
    ConversionExpr  go to state 34


State 70

   18 cmp_op: EQL .

    $default  reduce using rule 18 (cmp_op)


State 71

   19 cmp_op: NEQ .

    $default  reduce using rule 19 (cmp_op)


State 72

   21 cmp_op: LEQ .

    $default  reduce using rule 21 (cmp_op)


State 73

   23 cmp_op: GEQ .

    $default  reduce using rule 23 (cmp_op)


State 74

   22 cmp_op: '>' .

    $default  reduce using rule 22 (cmp_op)


State 75

   20 cmp_op: '<' .

    $default  reduce using rule 20 (cmp_op)


State 76

   10 Expression2: Expression2 cmp_op . Expression3

    TRUE       shift, and go to state 5
    FALSE      shift, and go to state 6
    '+'        shift, and go to state 11
    '-'        shift, and go to state 12
    '('        shift, and go to state 13
    '!'        shift, and go to state 15
    INT_LIT    shift, and go to state 16
    FLOAT_LIT  shift, and go to state 17
    IDENT      shift, and go to state 18
    '"'        shift, and go to state 19

    Expression3     go to state 108
    Expression4     go to state 26
    UnaryExpr       go to state 27
    unary_op        go to state 28
    PrimaryExpr     go to state 29
    Operand         go to state 30
    Literal         go to state 31
    BOOL_LIT        go to state 32
    IndexExpr       go to state 33
    ConversionExpr  go to state 34


State 77

   24 add_op: '+' .

    $default  reduce using rule 24 (add_op)


State 78

   25 add_op: '-' .

    $default  reduce using rule 25 (add_op)


State 79

   12 Expression3: Expression3 add_op . Expression4

    TRUE       shift, and go to state 5
    FALSE      shift, and go to state 6
    '+'        shift, and go to state 11
    '-'        shift, and go to state 12
    '('        shift, and go to state 13
    '!'        shift, and go to state 15
    INT_LIT    shift, and go to state 16
    FLOAT_LIT  shift, and go to state 17
    IDENT      shift, and go to state 18
    '"'        shift, and go to state 19

    Expression4     go to state 109
    UnaryExpr       go to state 27
    unary_op        go to state 28
    PrimaryExpr     go to state 29
    Operand         go to state 30
    Literal         go to state 31
    BOOL_LIT        go to state 32
    IndexExpr       go to state 33
    ConversionExpr  go to state 34


State 80

   26 mul_op: '*' .

    $default  reduce using rule 26 (mul_op)


State 81

   27 mul_op: '/' .

    $default  reduce using rule 27 (mul_op)


State 82

   28 mul_op: '%' .

    $default  reduce using rule 28 (mul_op)


State 83

   14 Expression4: Expression4 mul_op . UnaryExpr

    TRUE       shift, and go to state 5
    FALSE      shift, and go to state 6
    '+'        shift, and go to state 11
    '-'        shift, and go to state 12
    '('        shift, and go to state 13
    '!'        shift, and go to state 15
    INT_LIT    shift, and go to state 16
    FLOAT_LIT  shift, and go to state 17
    IDENT      shift, and go to state 18
    '"'        shift, and go to state 19

    UnaryExpr       go to state 110
    unary_op        go to state 28
    PrimaryExpr     go to state 29
    Operand         go to state 30
    Literal         go to state 31
    BOOL_LIT        go to state 32
    IndexExpr       go to state 33
    ConversionExpr  go to state 34


State 84

   17 UnaryExpr: unary_op UnaryExpr .

    $default  reduce using rule 17 (UnaryExpr)


State 85

   44 IndexExpr: PrimaryExpr '[' . Expression ']'

    TRUE       shift, and go to state 5
    FALSE      shift, and go to state 6
    '+'        shift, and go to state 11
    '-'        shift, and go to state 12
    '('        shift, and go to state 13
    '!'        shift, and go to state 15
    INT_LIT    shift, and go to state 16
    FLOAT_LIT  shift, and go to state 17
    IDENT      shift, and go to state 18
    '"'        shift, and go to state 19

    Expression      go to state 111
    Expression1     go to state 23
    Expression2     go to state 24
    Expression3     go to state 25
    Expression4     go to state 26
    UnaryExpr       go to state 27
    unary_op        go to state 28
    PrimaryExpr     go to state 29
    Operand         go to state 30
    Literal         go to state 31
    BOOL_LIT        go to state 32
    IndexExpr       go to state 33
    ConversionExpr  go to state 34


State 86

   60 AssignmentStmt: AssignmentExpr SEMICOLON .

    $default  reduce using rule 60 (AssignmentStmt)


State 87

   69 IncDecStmt: IncDecExpr SEMICOLON .

    $default  reduce using rule 69 (IncDecStmt)


State 88

   73 StatementList: StatementList Statement .

    $default  reduce using rule 73 (StatementList)


State 89

    6 Expression: Expression . OR Expression1
   86 PrintStmt: PRINT '(' Expression . ')' SEMICOLON

    OR   shift, and go to state 59
    ')'  shift, and go to state 112


State 90

   74 IfStmt: IF Condition Block .
   75       | IF Condition Block . ELSE IfStmt
   76       | IF Condition Block . ELSE Block

    ELSE  shift, and go to state 113

    $default  reduce using rule 74 (IfStmt)


State 91

    6 Expression: Expression . OR Expression1
   59 AssignmentExpr: Expression . assign_op Expression
   67 IncDecExpr: Expression . INC
   68           | Expression . DEC
   84 SimpleExpr: Expression .

    OR          shift, and go to state 59
    INC         shift, and go to state 60
    DEC         shift, and go to state 61
    ADD_ASSIGN  shift, and go to state 62
    SUB_ASSIGN  shift, and go to state 63
    MUL_ASSIGN  shift, and go to state 64
    QUO_ASSIGN  shift, and go to state 65
    REM_ASSIGN  shift, and go to state 66
    '='         shift, and go to state 67

    $default  reduce using rule 84 (SimpleExpr)

    assign_op  go to state 68


State 92

   83 SimpleExpr: AssignmentExpr .

    $default  reduce using rule 83 (SimpleExpr)


State 93

   85 SimpleExpr: IncDecExpr .

    $default  reduce using rule 85 (SimpleExpr)


State 94

   79 ForStmt: FOR '(' ForClause . ')' Block

    ')'  shift, and go to state 114


State 95

   80 ForClause: InitStmt . SEMICOLON Condition SEMICOLON PostStmt

    SEMICOLON  shift, and go to state 115


State 96

   81 InitStmt: SimpleExpr .

    $default  reduce using rule 81 (InitStmt)


State 97

   78 WhileStmt: WHILE '(' Condition . ')' Block

    ')'  shift, and go to state 116


State 98

   45 ConversionExpr: '(' TypeName ')' . Expression

    TRUE       shift, and go to state 5
    FALSE      shift, and go to state 6
    '+'        shift, and go to state 11
    '-'        shift, and go to state 12
    '('        shift, and go to state 13
    '!'        shift, and go to state 15
    INT_LIT    shift, and go to state 16
    FLOAT_LIT  shift, and go to state 17
    IDENT      shift, and go to state 18
    '"'        shift, and go to state 19

    Expression      go to state 117
    Expression1     go to state 23
    Expression2     go to state 24
    Expression3     go to state 25
    Expression4     go to state 26
    UnaryExpr       go to state 27
    unary_op        go to state 28
    PrimaryExpr     go to state 29
    Operand         go to state 30
    Literal         go to state 31
    BOOL_LIT        go to state 32
    IndexExpr       go to state 33
    ConversionExpr  go to state 34


State 99

   37 Operand: '(' Expression ')' .

    $default  reduce using rule 37 (Operand)


State 100

   71 Block: '{' $@1 StatementList . '}'
   73 StatementList: StatementList . Statement

    INT        shift, and go to state 1
    FLOAT      shift, and go to state 2
    BOOL       shift, and go to state 3
    STRING     shift, and go to state 4
    TRUE       shift, and go to state 5
    FALSE      shift, and go to state 6
    PRINT      shift, and go to state 7
    IF         shift, and go to state 8
    FOR        shift, and go to state 9
    WHILE      shift, and go to state 10
    '+'        shift, and go to state 11
    '-'        shift, and go to state 12
    '('        shift, and go to state 13
    '{'        shift, and go to state 14
    '}'        shift, and go to state 118
    '!'        shift, and go to state 15
    INT_LIT    shift, and go to state 16
    FLOAT_LIT  shift, and go to state 17
    IDENT      shift, and go to state 18
    '"'        shift, and go to state 19

    INT        [reduce using rule 46 (Statement)]
    FLOAT      [reduce using rule 46 (Statement)]
    BOOL       [reduce using rule 46 (Statement)]
    STRING     [reduce using rule 46 (Statement)]
    TRUE       [reduce using rule 46 (Statement)]
    FALSE      [reduce using rule 46 (Statement)]
    PRINT      [reduce using rule 46 (Statement)]
    IF         [reduce using rule 46 (Statement)]
    FOR        [reduce using rule 46 (Statement)]
    WHILE      [reduce using rule 46 (Statement)]
    '+'        [reduce using rule 46 (Statement)]
    '-'        [reduce using rule 46 (Statement)]
    '('        [reduce using rule 46 (Statement)]
    '{'        [reduce using rule 46 (Statement)]
    '}'        [reduce using rule 46 (Statement)]
    '!'        [reduce using rule 46 (Statement)]
    INT_LIT    [reduce using rule 46 (Statement)]
    FLOAT_LIT  [reduce using rule 46 (Statement)]
    IDENT      [reduce using rule 46 (Statement)]
    '"'        [reduce using rule 46 (Statement)]

    TypeName         go to state 21
    Expression       go to state 22
    Expression1      go to state 23
    Expression2      go to state 24
    Expression3      go to state 25
    Expression4      go to state 26
    UnaryExpr        go to state 27
    unary_op         go to state 28
    PrimaryExpr      go to state 29
    Operand          go to state 30
    Literal          go to state 31
    BOOL_LIT         go to state 32
    IndexExpr        go to state 33
    ConversionExpr   go to state 34
    Statement        go to state 88
    DeclarationStmt  go to state 36
    AssignmentExpr   go to state 37
    AssignmentStmt   go to state 38
    IncDecExpr       go to state 39
    IncDecStmt       go to state 40
    Block            go to state 41
    IfStmt           go to state 43
    WhileStmt        go to state 44
    ForStmt          go to state 45
    PrintStmt        go to state 46


State 101

   40 Literal: '"' STRING_LIT '"' .

    $default  reduce using rule 40 (Literal)


State 102

   56 DeclarationStmt: TypeName IDENT SEMICOLON .

    $default  reduce using rule 56 (DeclarationStmt)


State 103

   57 DeclarationStmt: TypeName IDENT '=' . Expression SEMICOLON

    TRUE       shift, and go to state 5
    FALSE      shift, and go to state 6
    '+'        shift, and go to state 11
    '-'        shift, and go to state 12
    '('        shift, and go to state 13
    '!'        shift, and go to state 15
    INT_LIT    shift, and go to state 16
    FLOAT_LIT  shift, and go to state 17
    IDENT      shift, and go to state 18
    '"'        shift, and go to state 19

    Expression      go to state 119
    Expression1     go to state 23
    Expression2     go to state 24
    Expression3     go to state 25
    Expression4     go to state 26
    UnaryExpr       go to state 27
    unary_op        go to state 28
    PrimaryExpr     go to state 29
    Operand         go to state 30
    Literal         go to state 31
    BOOL_LIT        go to state 32
    IndexExpr       go to state 33
    ConversionExpr  go to state 34


State 104

   58 DeclarationStmt: TypeName IDENT '[' . Expression ']' SEMICOLON

    TRUE       shift, and go to state 5
    FALSE      shift, and go to state 6
    '+'        shift, and go to state 11
    '-'        shift, and go to state 12
    '('        shift, and go to state 13
    '!'        shift, and go to state 15
    INT_LIT    shift, and go to state 16
    FLOAT_LIT  shift, and go to state 17
    IDENT      shift, and go to state 18
    '"'        shift, and go to state 19

    Expression      go to state 120
    Expression1     go to state 23
    Expression2     go to state 24
    Expression3     go to state 25
    Expression4     go to state 26
    UnaryExpr       go to state 27
    unary_op        go to state 28
    PrimaryExpr     go to state 29
    Operand         go to state 30
    Literal         go to state 31
    BOOL_LIT        go to state 32
    IndexExpr       go to state 33
    ConversionExpr  go to state 34


State 105

    6 Expression: Expression OR Expression1 .
    8 Expression1: Expression1 . AND Expression2

    AND  shift, and go to state 69

    AND       [reduce using rule 6 (Expression)]
    $default  reduce using rule 6 (Expression)


State 106

    6 Expression: Expression . OR Expression1
   59 AssignmentExpr: Expression assign_op Expression .

    OR  shift, and go to state 59

    $default  reduce using rule 59 (AssignmentExpr)


State 107

    8 Expression1: Expression1 AND Expression2 .
   10 Expression2: Expression2 . cmp_op Expression3

    EQL  shift, and go to state 70
    NEQ  shift, and go to state 71
    LEQ  shift, and go to state 72
    GEQ  shift, and go to state 73
    '>'  shift, and go to state 74
    '<'  shift, and go to state 75

    EQL       [reduce using rule 8 (Expression1)]
    NEQ       [reduce using rule 8 (Expression1)]
    LEQ       [reduce using rule 8 (Expression1)]
    GEQ       [reduce using rule 8 (Expression1)]
    '>'       [reduce using rule 8 (Expression1)]
    '<'       [reduce using rule 8 (Expression1)]
    $default  reduce using rule 8 (Expression1)

    cmp_op  go to state 76


State 108

   10 Expression2: Expression2 cmp_op Expression3 .
   12 Expression3: Expression3 . add_op Expression4

    '+'  shift, and go to state 77
    '-'  shift, and go to state 78

    '+'       [reduce using rule 10 (Expression2)]
    '-'       [reduce using rule 10 (Expression2)]
    $default  reduce using rule 10 (Expression2)

    add_op  go to state 79


State 109

   12 Expression3: Expression3 add_op Expression4 .
   14 Expression4: Expression4 . mul_op UnaryExpr

    '*'  shift, and go to state 80
    '/'  shift, and go to state 81
    '%'  shift, and go to state 82

    '*'       [reduce using rule 12 (Expression3)]
    '/'       [reduce using rule 12 (Expression3)]
    '%'       [reduce using rule 12 (Expression3)]
    $default  reduce using rule 12 (Expression3)

    mul_op  go to state 83


State 110

   14 Expression4: Expression4 mul_op UnaryExpr .

    $default  reduce using rule 14 (Expression4)


State 111

    6 Expression: Expression . OR Expression1
   44 IndexExpr: PrimaryExpr '[' Expression . ']'

    OR   shift, and go to state 59
    ']'  shift, and go to state 121


State 112

   86 PrintStmt: PRINT '(' Expression ')' . SEMICOLON

    SEMICOLON  shift, and go to state 122


State 113

   75 IfStmt: IF Condition Block ELSE . IfStmt
   76       | IF Condition Block ELSE . Block

    IF   shift, and go to state 8
    '{'  shift, and go to state 14

    Block   go to state 123
    IfStmt  go to state 124


State 114

   79 ForStmt: FOR '(' ForClause ')' . Block

    '{'  shift, and go to state 14

    Block  go to state 125


State 115

   80 ForClause: InitStmt SEMICOLON . Condition SEMICOLON PostStmt

    TRUE       shift, and go to state 5
    FALSE      shift, and go to state 6
    '+'        shift, and go to state 11
    '-'        shift, and go to state 12
    '('        shift, and go to state 13
    '!'        shift, and go to state 15
    INT_LIT    shift, and go to state 16
    FLOAT_LIT  shift, and go to state 17
    IDENT      shift, and go to state 18
    '"'        shift, and go to state 19

    Expression      go to state 48
    Expression1     go to state 23
    Expression2     go to state 24
    Expression3     go to state 25
    Expression4     go to state 26
    UnaryExpr       go to state 27
    unary_op        go to state 28
    PrimaryExpr     go to state 29
    Operand         go to state 30
    Literal         go to state 31
    BOOL_LIT        go to state 32
    IndexExpr       go to state 33
    ConversionExpr  go to state 34
    Condition       go to state 126


State 116

   78 WhileStmt: WHILE '(' Condition ')' . Block

    '{'  shift, and go to state 14

    Block  go to state 127


State 117

    6 Expression: Expression . OR Expression1
   45 ConversionExpr: '(' TypeName ')' Expression .

    OR  shift, and go to state 59

    OR        [reduce using rule 45 (ConversionExpr)]
    $default  reduce using rule 45 (ConversionExpr)


State 118

   71 Block: '{' $@1 StatementList '}' .

    $default  reduce using rule 71 (Block)


State 119

    6 Expression: Expression . OR Expression1
   57 DeclarationStmt: TypeName IDENT '=' Expression . SEMICOLON

    SEMICOLON  shift, and go to state 128
    OR         shift, and go to state 59


State 120

    6 Expression: Expression . OR Expression1
   58 DeclarationStmt: TypeName IDENT '[' Expression . ']' SEMICOLON

    OR   shift, and go to state 59
    ']'  shift, and go to state 129


State 121

   44 IndexExpr: PrimaryExpr '[' Expression ']' .

    $default  reduce using rule 44 (IndexExpr)


State 122

   86 PrintStmt: PRINT '(' Expression ')' SEMICOLON .

    $default  reduce using rule 86 (PrintStmt)


State 123

   76 IfStmt: IF Condition Block ELSE Block .

    $default  reduce using rule 76 (IfStmt)


State 124

   75 IfStmt: IF Condition Block ELSE IfStmt .

    $default  reduce using rule 75 (IfStmt)


State 125

   79 ForStmt: FOR '(' ForClause ')' Block .

    $default  reduce using rule 79 (ForStmt)


State 126

   80 ForClause: InitStmt SEMICOLON Condition . SEMICOLON PostStmt

    SEMICOLON  shift, and go to state 130


State 127

   78 WhileStmt: WHILE '(' Condition ')' Block .

    $default  reduce using rule 78 (WhileStmt)


State 128

   57 DeclarationStmt: TypeName IDENT '=' Expression SEMICOLON .

    $default  reduce using rule 57 (DeclarationStmt)


State 129

   58 DeclarationStmt: TypeName IDENT '[' Expression ']' . SEMICOLON

    SEMICOLON  shift, and go to state 131


State 130

   80 ForClause: InitStmt SEMICOLON Condition SEMICOLON . PostStmt

    TRUE       shift, and go to state 5
    FALSE      shift, and go to state 6
    '+'        shift, and go to state 11
    '-'        shift, and go to state 12
    '('        shift, and go to state 13
    '!'        shift, and go to state 15
    INT_LIT    shift, and go to state 16
    FLOAT_LIT  shift, and go to state 17
    IDENT      shift, and go to state 18
    '"'        shift, and go to state 19

    Expression      go to state 91
    Expression1     go to state 23
    Expression2     go to state 24
    Expression3     go to state 25
    Expression4     go to state 26
    UnaryExpr       go to state 27
    unary_op        go to state 28
    PrimaryExpr     go to state 29
    Operand         go to state 30
    Literal         go to state 31
    BOOL_LIT        go to state 32
    IndexExpr       go to state 33
    ConversionExpr  go to state 34
    AssignmentExpr  go to state 92
    IncDecExpr      go to state 93
    PostStmt        go to state 132
    SimpleExpr      go to state 133


State 131

   58 DeclarationStmt: TypeName IDENT '[' Expression ']' SEMICOLON .

    $default  reduce using rule 58 (DeclarationStmt)


State 132

   80 ForClause: InitStmt SEMICOLON Condition SEMICOLON PostStmt .

    $default  reduce using rule 80 (ForClause)


State 133

   82 PostStmt: SimpleExpr .

    $default  reduce using rule 82 (PostStmt)
